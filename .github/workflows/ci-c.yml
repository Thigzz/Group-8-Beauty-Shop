name: Backend CI/CD (Render)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - develop
      - main

jobs:
  # frontend:
  #   name: Frontend (React)
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'

  #     - name: Cache Node modules
  #       uses: actions/cache@v4
  #       with:
  #         path: client/node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install frontend dependencies
  #       working-directory: ./client
  #       run: npm ci

  #     - name: Run frontend tests
  #       working-directory: ./client
  #       run: npm test -- --watchAll=false

  #     - name: Build frontend
  #       working-directory: ./client
  #       run: npm run build

  #     - name: Upload React build artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: react-build
  #         path: ./client/build

  backend:
    name: Backend (Flask)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('./requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        run: pip install -r ./requirements.txt

      - name: Run backend tests with pytest
        run: pytest


  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [backend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Trigger Render Deploy Hook
      # - name: Download React build artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: react-build
      #     path: ./server/static
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

